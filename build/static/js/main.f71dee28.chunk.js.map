{"version":3,"sources":["web3.js","ecommerce.js","App.js","serviceWorker.js","index.js"],"names":["web3","Web3","window","currentProvider","eth","Contract","App","props","onSubmit","event","a","preventDefault","getAccounts","accounts","setState","message","ecommerce","methods","writeReview","state","reviewText","send","from","manager","productNumber","reviewNumber","call","this","console","log","type","name","onChange","target","value","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"6bAIeA,EAFF,I,OAAIC,GAAKC,OAAOF,KAAKG,iBCKnB,MAAIH,EAAKI,IAAIC,SAHhB,CAAC,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,yBAAyB,QAAU,CAAC,CAAC,WAAa,CAAC,CAAC,KAAO,kBAAkB,KAAO,WAAW,CAAC,KAAO,YAAY,KAAO,WAAW,CAAC,KAAO,eAAe,KAAO,WAAW,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,gBAAgB,KAAO,WAAW,CAAC,KAAO,mBAAmB,KAAO,cAAc,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,KAAO,QAAQ,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,eAAe,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,CAAC,CAAC,KAAO,gBAAgB,KAAO,YAAY,KAAO,qBAAqB,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,UAAU,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,gBAAgB,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,iBAAiB,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,WAAW,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,GAAG,KAAO,UAAU,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,QAAQ,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,SAAS,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,CAAC,CAAC,KAAO,iBAAiB,KAAO,WAAW,CAAC,KAAO,gBAAgB,KAAO,YAAY,KAAO,gBAAgB,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,KAAO,gBAAgB,KAAO,WAAW,CAAC,KAAO,UAAU,KAAO,YAAY,KAAO,aAAa,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,KAAO,oBAAoB,QAAU,CAAC,CAAC,KAAO,kBAAkB,KAAO,WAAW,CAAC,KAAO,YAAY,KAAO,WAAW,CAAC,KAAO,eAAe,KAAO,WAAW,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,gBAAgB,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,KAAO,cAAc,QAAU,CAAC,CAAC,KAAO,YAAY,KAAO,WAAW,CAAC,KAAO,qBAAqB,KAAO,WAAW,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,YAAY,KAAO,cAAc,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,KAAO,sBAAsB,KAAO,WAAW,KAAO,aAAa,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,gBAFllG,8CCuEDC,E,YAlEb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAoBRC,SArBmB,uCAqBR,WAAMC,GAAN,eAAAC,EAAA,6DACTD,EAAME,iBADG,SAGcX,EAAKI,IAAIQ,cAHvB,cAGHC,EAHG,OAKT,EAAKC,SAAS,CAAEC,QAAS,sCALhB,SAOHC,EAAUC,QAAQC,YAAY,EAAKC,MAAMC,WAAY,GAAGC,KAAK,CACjEC,KAAMT,EAAS,KARR,OAWT,EAAKC,SAAS,CAAEC,QAAS,4BACTK,WAAY,KAZnB,2CArBQ,sDAGjB,EAAKD,MAAQ,CAACI,QAAS,GACXC,cAAe,GACfC,aAAc,GACdL,WAAY,GACZL,QAAS,IAPJ,E,qNAYKC,EAAUC,QAAQM,UAAUG,O,cAA5CH,E,gBACsBP,EAAUC,QAAQO,gBAAgBE,O,cAAxDF,E,gBACqBR,EAAUC,QAAQQ,eAAeC,O,OAAtDD,E,OAGNE,KAAKb,SAAS,CAAES,UAASC,gBAAeC,iB,sIAmB/B,IAAD,OAGR,OAFAG,QAAQC,IAAIb,GAGV,6BACE,yFACA,6BACA,uDAA6BW,KAAKR,MAAMI,QAAxC,KACA,6BACA,oDAA0BI,KAAKR,MAAMM,aAArC,uCACA,6BACA,oDAA0BE,KAAKR,MAAMK,cAArC,wDACA,6BACA,0BAAMhB,SAAUmB,KAAKnB,UACnB,2DACA,6BACE,qEACA,2BAAOsB,KAAK,OAAOC,KAAK,aAEtBC,SAAU,SAAAvB,GAAK,OAAI,EAAKK,SAAS,CAAEM,WAAYX,EAAMwB,OAAOC,YAGhE,0CAEJ,4BAAKP,KAAKR,MAAMJ,c,GA9DJoB,aCOEC,QACW,cAA7BlC,OAAOmC,SAASC,UAEe,UAA7BpC,OAAOmC,SAASC,UAEhBpC,OAAOmC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLvB,QAAQuB,MAAMA,EAAMpC,c","file":"static/js/main.f71dee28.chunk.js","sourcesContent":["import Web3 from 'web3';\r\n\r\nconst web3 = new Web3(window.web3.currentProvider);\r\n\r\nexport default web3;\r\n","import web3 from './web3';\r\n\r\nconst address = '0x213c666AC07B91B885858B2f8fb629d0cc7d5fBD';\r\n\r\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"getReviewsMappingValue\",\"outputs\":[{\"components\":[{\"name\":\"reviewerAddress\",\"type\":\"address\"},{\"name\":\"productId\",\"type\":\"uint256\"},{\"name\":\"totalUpdates\",\"type\":\"uint256\"},{\"name\":\"reviewText\",\"type\":\"string\"},{\"name\":\"averageRating\",\"type\":\"uint256\"},{\"name\":\"allReviewRatings\",\"type\":\"uint256[]\"}],\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"users\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reviewNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_reviewNumber\",\"type\":\"uint256\"}],\"name\":\"verifyReviewRating\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"productNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialMessage\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"newUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_senderAddress\",\"type\":\"address\"},{\"name\":\"_reviewNumber\",\"type\":\"uint256\"}],\"name\":\"transferFunds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_reviewNumber\",\"type\":\"uint256\"},{\"name\":\"_rating\",\"type\":\"uint256\"}],\"name\":\"rateReview\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allProductReviews\",\"outputs\":[{\"name\":\"reviewerAddress\",\"type\":\"address\"},{\"name\":\"productId\",\"type\":\"uint256\"},{\"name\":\"totalUpdates\",\"type\":\"uint256\"},{\"name\":\"reviewText\",\"type\":\"string\"},{\"name\":\"averageRating\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allProducts\",\"outputs\":[{\"name\":\"productId\",\"type\":\"uint256\"},{\"name\":\"productDescription\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_reviewText\",\"type\":\"string\"},{\"name\":\"_productId\",\"type\":\"uint256\"}],\"name\":\"writeReview\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_productDescription\",\"type\":\"string\"}],\"name\":\"addProduct\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]\r\n// const abi = [{\"constant\":false,\"inputs\":[{\"name\":\"newReview\",\"type\":\"string\"}],\"name\":\"setReview\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"review\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialReview\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]\r\n\r\nexport default new web3.eth.Contract(abi, address);","import React, { Component } from 'react';\n//import './App.css';\nimport web3 from '../src/web3';\nimport ecommerce from '../src/ecommerce';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {manager: '',\n                productNumber: '',\n                reviewNumber: '',\n                reviewText: '',\n                message: ''\n//                users: ''\n                };\n  }\n  async componentDidMount(){\n    const manager = await ecommerce.methods.manager().call();\n    const productNumber = await ecommerce.methods.productNumber().call();\n    const reviewNumber = await ecommerce.methods.reviewNumber().call();\n    //const users = await ecommerce.methods.users().call();\n\n    this.setState({ manager, productNumber, reviewNumber});\n\n  }\n\n  onSubmit = async event => {\n    event.preventDefault();\n\n    const accounts = await web3.eth.getAccounts();\n\n    this.setState({ message: 'Waiting on transaction success...' });\n\n    await ecommerce.methods.writeReview(this.state.reviewText, 1).send({\n      from: accounts[0]\n    });\n\n    this.setState({ message: 'Your review is submitted!', \n                    reviewText: '' });\n  };\n\n  render () { \n    console.log(ecommerce);\n    \n    return (\n      <div>\n        <h2> Blockchain-based product review Crypto-rewards platform </h2>\n        <hr/>\n        <p> Contract is deployed by {this.state.manager} </p>\n        <hr/>\n        <p> There are a total of {this.state.reviewNumber} reviews available on the platform </p>\n        <hr/>\n        <p> There are a total of {this.state.productNumber} products for which users can write or rate reviews </p>\n        <hr/>\n        <form onSubmit={this.onSubmit}>\n          <h4>Write Review for Product 1 </h4>\n          <div>\n            <label>Enter your review text and Submit </label>\n            <input type='text' name='reviewText'\n              //reviewText={this.state.reviewText}\n              onChange={event => this.setState({ reviewText: event.target.value })}\n            />\n          </div>\n          <button>Enter</button>\n      </form>\n      <h1>{this.state.message}</h1>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}